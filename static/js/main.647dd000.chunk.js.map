{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","required","onChange","validate","useState","Math","random","toString","slice","id","touched","setTouched","hasError","isValid","hasWrongUrl","htmlFor","classNames","type","placeholder","event","target","onBlur","NewMovie","onAdd","count","setCount","setMovie","isFormValid","checkUrl","url","test","prevMovie","onSubmit","prevCount","disabled","App","moviesFromServer","setMovies","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.647dd000.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport type { ChangeFunction } from '../NewMovie';\n\ntype Props = {\n  name: string;\n  value: string;\n  label?: string;\n  required?: boolean;\n  onChange: ChangeFunction;\n  validate?: (value: string) => boolean;\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange,\n  validate = () => true,\n}) => {\n  // generage a unique id once on component load\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  // To show errors only if the field was touched (onBlur)\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && required && !value;\n  const isValid = validate(value);\n  const hasWrongUrl = touched && !isValid;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          name={name}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError || hasWrongUrl,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={(event) => onChange(event.target.name, event.target.value)}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && <p className=\"help is-danger\">{`${label} is required`}</p>}\n      {hasWrongUrl\n        && <p className=\"help is-danger\">Please enter a valid URL</p>}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport type { FC } from 'react';\nimport { TextField } from '../TextField';\nimport type { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport type ChangeFunction = (name: string, value: string) => void;\n\nexport const NewMovie: FC<Props> = ({ onAdd }) => {\n  // Increase the count after successful form submission\n  // to reset touched status of all the `Field`s\n  const [count, setCount] = useState(0);\n\n  const [movie, setMovie] = useState({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n\n  const {\n    title,\n    imgUrl,\n    imdbUrl,\n    imdbId,\n  } = movie;\n\n  const isFormValid = title && imgUrl && imdbUrl && imdbId;\n\n  const checkUrl = (url: string) => {\n    if (!url) {\n      return true;\n    }\n\n    // eslint-disable-next-line max-len\n    const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\n    return pattern.test(url);\n  };\n\n  const onChange: ChangeFunction = (name: string, value: string) => {\n    setMovie((prevMovie) => ({\n      ...prevMovie,\n      [name]: value,\n    }));\n  };\n\n  const onSubmit = () => {\n    onAdd(movie);\n    setCount((prevCount) => prevCount + 1);\n    setMovie({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  return (\n    <form className=\"NewMovie\" key={count} onSubmit={onSubmit}>\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={movie.title}\n        onChange={onChange}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={movie.description}\n        onChange={onChange}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={movie.imgUrl}\n        onChange={onChange}\n        required\n        validate={checkUrl}\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={movie.imdbUrl}\n        onChange={onChange}\n        required\n        validate={checkUrl}\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={movie.imdbId}\n        onChange={onChange}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={!isFormValid}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport type { FC } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport type { Movie } from './types/Movie';\n\nexport const App: FC = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const addMovie = (movie: Movie) => {\n    setMovies((prevMovies) => [...prevMovies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}